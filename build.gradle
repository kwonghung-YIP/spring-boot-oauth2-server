buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'hung-spring-boot-oauth2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Greenwich.M3'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	implementation('org.springframework.boot:spring-boot-starter-security')	
	implementation('org.springframework.security:spring-security-ldap')
	
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
	//Skip use the autoconfiguration because of following issue for RedisTokenStore:
	//https://github.com/spring-projects/spring-security-oauth2-boot/issues/16
	//implementation('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE')
	
	implementation('org.springframework.session:spring-session-data-redis')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
